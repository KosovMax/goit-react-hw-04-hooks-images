{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/hits-api.js","components/App.js","index.js"],"names":["Searchbar","onSearch","useState","search","setSearch","className","onSubmit","evt","preventDefault","type","autoComplete","autoFocus","placeholder","name","value","onChange","target","ImageGalleryItem","id","src","alt","showIdModel","onClick","ImageGallery","imageGalleries","map","webformatURL","Button","children","allyProps","style","textAlign","defaultProps","modalRoot","document","querySelector","Modal","closeModal","handler","key","props","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","PropTypes","string","isRequired","func","axios","defaults","baseURL","params","searchQuery","page","perPage","get","q","per_page","then","response","data","hits","goPage","Error","App","galleries","setGallaries","loading","setLoading","error","setError","show","modalState","setModal","useReducer","setPage","trim","hitsApi","prevGallaries","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","getIdModal","useMemo","find","item","console","log","query","message","length","prevModal","color","height","width","largeImageURL","ReactDOM","render"],"mappings":"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","file":"static/js/main.5c7604c7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({onSearch}){\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = ({target}) => {\r\n       setSearch(target.value)\r\n    }\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n        onSearch(search);\r\n    }\r\n\r\n    return(\r\n        <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"search\"\r\n            value={search}\r\n            onChange = {handleChange}\r\n            />\r\n        </form>\r\n        </header>\r\n    )\r\n}\r\n\r\nSearchbar.defaultProps = {\r\n    onSearch:()=>{}\r\n}\r\nSearchbar.propTypes = {\r\n    onSearch:PropTypes.func\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({id, src, alt, showIdModel}){\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img src={src} alt={alt} onClick={()=>showIdModel(id)} className=\"ImageGalleryItem-image\" />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n    id:0,\r\n    src:'https://dummyimage.com/640x480/2a2a2a/ffffff&text=No+image',\r\n    alt:''\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    src:PropTypes.string.isRequired,\r\n    alt:PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from './../ImageGalleryItem/ImageGalleryItem'\r\n\r\nexport default function ImageGallery({imageGalleries, showIdModel}){\r\n    return(\r\n        <ul className=\"ImageGallery\">\r\n            {imageGalleries.map(({id, webformatURL}) => (\r\n                <ImageGalleryItem key={id} id={id} src={webformatURL} showIdModel={showIdModel} />\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n    imageGalleries:[]\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    imageGalleries:PropTypes.array.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nexport default function Button({onClick, children, allyProps}) {\r\n    return(\r\n        <div style={{textAlign:\"center\"}}>\r\n            <button type=\"button\" onClick={onClick} className=\"Button\" {...allyProps}>{children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    onClick:()=>null,\r\n    children:null\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick:PropTypes.func,\r\n    children:PropTypes.node\r\n}","import React, { useEffect } from 'react';\r\nimport ReactDOM, { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\n\r\nexport default function Modal({src, closeModal}) {\r\n\r\n    const handler = ({ key }) => {\r\n        if (key === 'Escape') this.props.closeModal()\r\n    }\r\n\r\n    const handleBackdrop = evt =>{\r\n        if(evt.currentTarget === evt.target) closeModal()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('keydown', handler)\r\n        return ()=>{\r\n            window.removeEventListener('keydown', handler)\r\n        };\r\n    }, [handler])\r\n    \r\n    \r\n    return createPortal(\r\n        <div className=\"Overlay\"  onClick={handleBackdrop}>\r\n            <div className=\"Modal\">\r\n                <img src={src} alt=\"\" />\r\n            </div>\r\n        </div>, \r\n        modalRoot\r\n    );\r\n}\r\n\r\nModal.defaultProps = {\r\n    src:'',\r\n    closeModal:()=>{}\r\n}\r\n\r\nModal.defaultProps = {\r\n    src:PropTypes.string.isRequired,\r\n    closeModal:PropTypes.func\r\n}\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api'\r\naxios.defaults.params = {}\r\naxios.defaults.params['key'] = '19319242-70903095163a85f904f3acecb'\r\naxios.defaults.params['image_type'] = 'photo'\r\naxios.defaults.params['orientation'] = 'horizontal'\r\n\r\nconst fetchHits = ({ searchQuery = '',  page = 1, perPage = 12}) =>{\r\n\r\n    return axios\r\n        .get('/',{params:{\r\n            q:searchQuery,\r\n            page:page,\r\n            per_page:perPage\r\n        }})\r\n        .then(response => response.data.hits)\r\n\r\n}\r\n\r\nexport default { fetchHits }","import React, { useEffect, useMemo, useReducer, useState } from 'react';\n\n\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\n\nimport hitsApi from './../services/hits-api'\n\n\nfunction goPage(page, type){\n    switch(type){\n        case 'go':\n            return page + 1;\n        case 'clear':\n            return 1\n        default:\n            throw new Error(`Unsuported action type ${type}`)\n\n    }\n}\n\nexport default function App(){\n\n    const [galleries, setGallaries] = useState([])\n    const [search, setSearch] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    // const [srcModal, setSrcModal] = useState('');\n    // const [showModal, setShowModal] = useState(false);\n    const [modalState, setModal] = useState({\n        show:false,\n        // src:'',\n        id:0\n    })\n\n    const [page, setPage] = useReducer(goPage, 0);\n\n\n    useEffect(()=>{\n\n        if(search.trim() === ''){\n            return\n        }\n        \n        setLoading(true);\n    \n        hitsApi.fetchHits({searchQuery:search, page:page})\n        .then(data => {\n            setGallaries(prevGallaries => [...prevGallaries, ...data])\n        })\n        .catch(error => setError(error))\n        .finally(() => {\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n            });\n            setLoading(false);\n        })\n    }, [search, page]);\n\n\n    const updateSerach = (query) =>{\n        if(search !== query){\n            setSearch(query)\n            setGallaries([])\n            setPage('clear');\n        }    \n    }\n\n    const getIdModal = useMemo(()=>{\n        return galleries.find((item) => {return item.id === modalState.id});\n    }, [galleries, modalState.id])\n\n    const showIdModel = (id) =>{\n        setModal(prevModal => ({...prevModal, id:id}))\n        // toggleModal();\n        setModal(prevModal => ({...prevModal, show:true}))\n    }\n\n    console.log(modalState);\n\n    const toggleModal = () =>{\n        setModal(prevModal => ({...prevModal, show:!prevModal.show}))\n    }\n\n\n    return (\n           <div className=\"App\">   \n                <Searchbar onSearch={updateSerach} />\n                {error && <p>Whoops, something went wrong: {error.message}</p>}\n                {galleries.length > 0 && <ImageGallery imageGalleries={galleries} showIdModel={showIdModel} /> }\n                {loading && <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} style={{textAlign:\"center\"}} />}\n                {galleries.length > 0 && <Button onClick={()=>setPage('go')} >Load more</Button>}\n                {modalState.show && <Modal src={getIdModal.largeImageURL} closeModal={toggleModal} />}\n           </div>\n        );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles.css';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}